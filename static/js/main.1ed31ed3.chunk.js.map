{"version":3,"sources":["components/app-header/index.js","components/app-header/app-header.js","components/search-panel/index.js","components/search-panel/search-panel.js","components/todo-list-item/index.js","components/todo-list-item/todo-list-item.js","components/todo-list/index.js","components/todo-list/todo-list.js","components/item-status-filter/index.js","components/item-status-filter/item-status-filter.js","components/item-add-form/index.js","components/item-add-form/item-add-form.js","components/app/index.js","components/app/app.js","index.js"],"names":["AppHeader","_ref","toDo","done","react_default","a","createElement","className","SearchPanel","state","term","onSearchChange","e","target","value","_this","setState","props","type","placeholder","this","onChange","Component","TodoListItem","_this$props","label","onDeleted","onToggleImportant","onToggleDone","important","classNames","onClick","React","TodoList","todos","elements","map","item","id","itemProps","Object","objectWithoutProperties","key","components_todo_list_item","assign","ItemStatusFilter","buttons","name","filter","onFilterChange","clazz","concat","ItemAddForm","onLabelChange","onSubmit","preventDefault","onItemAdded","App","maxId","todoData","createTodoItem","addItem","text","newItem","toConsumableArray","_ref2","toggleProperty","_ref3","deleteItem","_ref4","idx","findIndex","el","slice","arr","propName","oldItem","objectSpread","defineProperty","items","length","toLowerCase","indexOf","_this$state","visibleItems","search","doneCount","todoCount","components_app_header","components_search_panel","components_item_status_filter","components_todo_list","components_item_add_form","ReactDOM","render","components_app","document","getElementById"],"mappings":"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","file":"static/js/main.1ed31ed3.chunk.js","sourcesContent":["import AppHeader from './app-header';\r\n\r\nexport default AppHeader;","import React from 'react';\nimport './app-header.css';\n\nconst AppHeader = ({toDo, done}) => {\n  return (\n    <div className=\"app-header d-flex\">\n      <h1>To-Do List</h1>\n      <h2>{toDo} more to do, {done} done</h2>\n    </div>\n  );\n};\n\nexport default AppHeader;\n","import SearchPanel from './search-panel';\r\n\r\nexport default SearchPanel;","import React, {Component} from 'react';\n\nimport './search-panel.css';\n\nexport default class SearchPanel extends Component{\n\n  state = {\n    term: ''\n  }\n\n  onSearchChange = (e) =>{\n    const term = e.target.value;\n    this.setState({term});\n    this.props.onSearchChange(term);\n  }\n\n  render(){\n    return (\n      <input type=\"text\"\n                className=\"form-control search-input\"\n                placeholder=\"type to search\"\n                value={this.state.term}\n                onChange={this.onSearchChange} />\n    );\n  }\n\n\n}\n","import TodoListItem from './todo-list-item';\r\n\r\nexport default TodoListItem;","import React from 'react';\n\nimport './todo-list-item.css';\n\nexport default class TodoListItem extends React.Component{\n\n  render(){\n\n    const { label, onDeleted,\n       onToggleImportant, onToggleDone, important, done} = this.props;\n   \n\n    let classNames = 'todo-list-item';\n    if(done){\n      classNames += ' done';\n    }\n    \n    if(important){\n      classNames += ' important'; \n    }\n  \n    return (\n      <span className={classNames}>\n        <span\n          className=\"todo-list-item-label\"\n          onClick={onToggleDone}>\n          {label}\n        </span>\n  \n        <button type=\"button\"\n                className=\"btn btn-outline-success btn-sm float-right\"\n                onClick={onToggleImportant}>\n          <i className=\"fa fa-exclamation\" />\n        </button>\n  \n        <button type=\"button\"\n                className=\"btn btn-outline-danger btn-sm float-right\"\n                onClick={onDeleted}>\n          <i className=\"fa fa-trash-o\" />\n        </button>\n      </span>\n    );\n  }\n}\n","import TodoList from './todo-list';\r\n\r\nexport default TodoList;","import React from 'react';\n\nimport TodoListItem from '../todo-list-item';\nimport './todo-list.css';\n\nconst TodoList = ({ todos, onDeleted, \n  onToggleImportant, onToggleDone }) => {\n\n  const elements = todos.map((item) => {\n    const { id, ...itemProps } = item;\n\n    return (\n      <li key={id} className=\"list-group-item\">\n        <TodoListItem\n          {...itemProps } \n          onDeleted={()=>onDeleted(id)}\n          onToggleImportant={()=>onToggleImportant(id)}\n          onToggleDone={()=>onToggleDone(id)}/>\n      </li>\n    );\n  });\n\n  return (\n    <ul className=\"list-group todo-list\">\n      { elements }\n    </ul>\n  );\n};\n\nexport default TodoList;\n","import ItemStatusFilter from './item-status-filter';\r\n\r\nexport default ItemStatusFilter;","import React from 'react';\n\nimport './item-status-filter.css';\n\nexport default class ItemStatusFilter extends React.Component{\n\n  buttons = [\n    {name: 'all', label: 'All'},\n    {name: 'active', label: 'Active'},\n    {name: 'done', label: 'Done'}\n  ];\n\n  render(){\n\n    const {filter, onFilterChange} = this.props;\n\n    const buttons = this.buttons.map(({name, label})=> {\n      const isActive = filter === name;\n      const clazz = isActive ? 'btn-info' : 'btn-outline-secondary';\n\n      return (\n        <button type='button'\n        className = {`btn ${clazz}`}\n        key = {name}\n        onClick={() => onFilterChange(name)}>\n        {label}</button>\n      )\n    });\n\n    return (\n      <div className=\"btn-group\">\n        {buttons}\n      </div>\n    );\n  }\n}\n","import ItemAddForm from './item-add-form';\r\n\r\nexport default ItemAddForm;","import React, {Component} from 'react';\r\n\r\nimport './item-add-form.css'\r\n\r\nexport default class ItemAddForm extends Component{\r\n\r\n    state = {\r\n        label: ''\r\n    };\r\n\r\n    onLabelChange = (e) =>{\r\n        this.setState({\r\n            label: e.target.value\r\n        })\r\n    };\r\n\r\n    onSubmit = (e) =>{\r\n        e.preventDefault();\r\n        this.props.onItemAdded(this.state.label);\r\n        this.setState({\r\n            label: ''\r\n        })\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <form className = \"item-add-form d-flex\"\r\n            onSubmit={this.onSubmit}>\r\n            <input type=\"text\" \r\n            className = \"form-control\"\r\n            onChange={this.onLabelChange}\r\n            placeholder=\"What needs to be done?\"\r\n            value={this.state.label}/>\r\n                <button className=\"btn btn-outline-secondary\">\r\n                    Add Item</button>\r\n            </form>\r\n        );\r\n    }\r\n\r\n}","import App from './app';\r\n\r\nexport default App;","import React, {Component} from 'react';\r\n\r\n\r\nimport AppHeader from '../app-header';\r\nimport SearchPanel from '../search-panel';\r\nimport TodoList from '../todo-list';\r\nimport ItemStatusFilter from '../item-status-filter';\r\nimport ItemAddForm from '../item-add-form';\r\n\r\nimport './app.css';\r\n\r\nexport default class App extends Component{\r\n\r\n    maxId = 100;\r\n\r\n    state = {\r\n        todoData: [\r\n          this.createTodoItem('Drink Coffee'),\r\n          this.createTodoItem(\"Make Awesome App\"),\r\n          this.createTodoItem('Have a lunch')\r\n           ],\r\n        term:'',\r\n        filter: 'all' //active, all, done\r\n    };\r\n\r\n    createTodoItem(label){\r\n        return{\r\n            label,\r\n            important: false,\r\n            done: false,\r\n            id: this.maxId++\r\n        }\r\n    }\r\n\r\n    addItem = (text) =>{\r\n       //generate id \r\n\r\n       const newItem = this.createTodoItem(text);\r\n\r\n       //add element in array \r\n\r\n       this.setState(({ todoData })=>{\r\n            const newArray = [\r\n                ...todoData,\r\n                newItem\r\n            ];\r\n            return{\r\n                todoData: newArray\r\n            }\r\n       });\r\n    };\r\n\r\n    toggleProperty(arr, id, propName){\r\n        const idx = arr.findIndex((el) => el.id === id);\r\n\r\n            // 1. update object\r\n\r\n            const oldItem = arr[idx];\r\n            const newItem = {...oldItem, \r\n                [propName]: !oldItem[propName]};\r\n\r\n\r\n            //2. construct new array\r\n            return [\r\n                ...arr.slice(0, idx),\r\n                newItem,\r\n                ...arr.slice(idx + 1)\r\n            ];\r\n\r\n    }\r\n    \r\n    onToggleImportant = (id) => {\r\n        this.setState(({todoData})=>{\r\n\r\n            return{\r\n                todoData: this.toggleProperty(todoData, id, 'important')\r\n            };\r\n\r\n        })\r\n    }\r\n\r\n    onToggleDone = (id) => {\r\n        this.setState(({todoData})=>{\r\n\r\n            return{\r\n                todoData: this.toggleProperty(todoData, id, 'done')\r\n            };\r\n\r\n        })\r\n        \r\n    }\r\n\r\n\r\n    deleteItem = (id) =>{\r\n        this.setState(({ todoData })=>{\r\n            const idx = todoData.findIndex((el) => el.id === id);\r\n           \r\n            const newArray = [\r\n                ...todoData.slice(0, idx),\r\n                ...todoData.slice(idx + 1)\r\n            ];\r\n\r\n            return {\r\n                todoData: newArray\r\n            }\r\n        });\r\n    }\r\n\r\n    search(items, term){\r\n        if (term.length === 0){\r\n            return items;\r\n        }\r\n\r\n       return items.filter((item)=>{\r\n            return item.label\r\n            .toLowerCase()\r\n            .indexOf(term.toLowerCase()) > -1;\r\n        })\r\n    };\r\n\r\n    onSearchChange = (term) => {\r\n        this.setState({term});\r\n    }\r\n\r\n    onFilterChange = (filter) => {\r\n        this.setState({filter});\r\n    }\r\n\r\n    filter(items, filter){\r\n\r\n        switch(filter) {\r\n            case 'all':\r\n                return items;\r\n            case 'active':\r\n                return items.filter((item) => !item.done);\r\n            case 'done':\r\n                return items.filter((item) => item.done);\r\n            default: \r\n            return items;\r\n        }\r\n    }\r\n\r\n    render(){\r\n\r\n        const {todoData, term, filter} = this.state;\r\n\r\n        const visibleItems = this.filter(\r\n            this.search(todoData, term), filter);\r\n         \r\n\r\n        const doneCount = todoData\r\n        .filter((el)=>el.done).length;\r\n\r\n        const todoCount = todoData.length - doneCount;\r\n\r\n        return (\r\n            <div className=\"todo-app\">\r\n              <AppHeader toDo={todoCount} done={doneCount} />\r\n              <div className=\"top-panel d-flex\">\r\n                <SearchPanel\r\n                onSearchChange = {this.onSearchChange} />\r\n                <ItemStatusFilter\r\n                filter={filter}\r\n                onFilterChange = {this.onFilterChange} />\r\n              </div>\r\n        \r\n              <TodoList todos={visibleItems} \r\n                onDeleted={this.deleteItem}\r\n                onToggleImportant={this.onToggleImportant}\r\n                onToggleDone={this.onToggleDone}/>\r\n                <ItemAddForm onItemAdded = {this.addItem}/>\r\n            </div>\r\n          );\r\n    };\r\n}\r\n\r\n\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/app'\n\n\nReactDOM.render(<App />,\n  document.getElementById('root'));"],"sourceRoot":""}